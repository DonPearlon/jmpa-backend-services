# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import message_pb2 as message__pb2


class MessageServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.process = channel.unary_unary(
                '/com.aterehov.stubs.message.MessageService/process',
                request_serializer=message__pb2.MessageRequest.SerializeToString,
                response_deserializer=message__pb2.MessageResponse.FromString,
                )
        self.processServerSideStreaming = channel.unary_stream(
                '/com.aterehov.stubs.message.MessageService/processServerSideStreaming',
                request_serializer=message__pb2.MessageRequest.SerializeToString,
                response_deserializer=message__pb2.MessageResponse.FromString,
                )
        self.processClientSideStreaming = channel.stream_unary(
                '/com.aterehov.stubs.message.MessageService/processClientSideStreaming',
                request_serializer=message__pb2.MessageRequest.SerializeToString,
                response_deserializer=message__pb2.MessageResponse.FromString,
                )
        self.processBidirectionalStreaming = channel.stream_stream(
                '/com.aterehov.stubs.message.MessageService/processBidirectionalStreaming',
                request_serializer=message__pb2.MessageRequest.SerializeToString,
                response_deserializer=message__pb2.MessageResponse.FromString,
                )


class MessageServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def process(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def processServerSideStreaming(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def processClientSideStreaming(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def processBidirectionalStreaming(self, request_iterator, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MessageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'process': grpc.unary_unary_rpc_method_handler(
                    servicer.process,
                    request_deserializer=message__pb2.MessageRequest.FromString,
                    response_serializer=message__pb2.MessageResponse.SerializeToString,
            ),
            'processServerSideStreaming': grpc.unary_stream_rpc_method_handler(
                    servicer.processServerSideStreaming,
                    request_deserializer=message__pb2.MessageRequest.FromString,
                    response_serializer=message__pb2.MessageResponse.SerializeToString,
            ),
            'processClientSideStreaming': grpc.stream_unary_rpc_method_handler(
                    servicer.processClientSideStreaming,
                    request_deserializer=message__pb2.MessageRequest.FromString,
                    response_serializer=message__pb2.MessageResponse.SerializeToString,
            ),
            'processBidirectionalStreaming': grpc.stream_stream_rpc_method_handler(
                    servicer.processBidirectionalStreaming,
                    request_deserializer=message__pb2.MessageRequest.FromString,
                    response_serializer=message__pb2.MessageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'com.aterehov.stubs.message.MessageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MessageService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def process(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/com.aterehov.stubs.message.MessageService/process',
            message__pb2.MessageRequest.SerializeToString,
            message__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def processServerSideStreaming(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/com.aterehov.stubs.message.MessageService/processServerSideStreaming',
            message__pb2.MessageRequest.SerializeToString,
            message__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def processClientSideStreaming(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_unary(request_iterator, target, '/com.aterehov.stubs.message.MessageService/processClientSideStreaming',
            message__pb2.MessageRequest.SerializeToString,
            message__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def processBidirectionalStreaming(request_iterator,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.stream_stream(request_iterator, target, '/com.aterehov.stubs.message.MessageService/processBidirectionalStreaming',
            message__pb2.MessageRequest.SerializeToString,
            message__pb2.MessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
